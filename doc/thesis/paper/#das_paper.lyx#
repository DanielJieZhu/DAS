#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass elsarticle
\options ecrc
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine natbib_authoryear
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Keyword Search over Data Services
\end_layout

\begin_layout Author
Vidmantas, Zemleris
\end_layout

\begin_layout Abstract
Data integration provides a centralized solution for locating and combining
 data from multiple sources.
 The complexity of writing structured-queries is impacting not only simple
 users who are forced to learn the schema and the query language, but also
 the tech-savvy users who may have only a vague idea of where exactly to
 find the data they need.
 
\end_layout

\begin_layout Abstract
In this paper we explore more intuitive alternatives such as keyword and
 natural language search, which, in fact, received fairly little attention
 in the field of data services integration.
 
\end_layout

\begin_layout Abstract
First, we review the state-of-the-art of approaches to searching data services
 including ways how these systems could self-adapt to usersâ€™ needs by taking
 into account historical queries and their results.
 
\end_layout

\begin_layout Abstract
Then, we a keyword search system over enterprise data integration is presented
 that was developed in the setting of a scientific collaboration of over
 3,000 physicists at the CMS Experiment, CERN.
 Given a keyword query the system proposes top-k most probable structured
 queries which could be later answered using current data integration infrastruc
ture.
 
\end_layout

\begin_layout Abstract

\color yellow
Also some of the data may be changing often, services have limitations on
 their interfaces, and users are interested in complete and up-to-date answers
 (i.e.
 Boolean Retrieval), the problem of keyword search becomes more complex
 as it is hard or even impossible to materialize/index all the contents
 in one central place.
 
\end_layout

\begin_layout Abstract
Finally, we evaluate the system developed.
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
TODO: introduce the paper
\end_layout

\begin_layout Section
Related work
\end_layout

\begin_layout Standard
NL Search over Webservices
\end_layout

\begin_layout Standard
KWS over webservices
\end_layout

\begin_layout Standard
NL S over 
\end_layout

\begin_layout Standard
KWS over Databases
\end_layout

\begin_layout Section*
Acknowledgements
\end_layout

\begin_layout Standard
Research on this article was supported by the CMS Computing group, at the
 Compact Muon Experiment at European Organization for Nuclear Research (CERN).
 The authors of this paper are thankful to Robert Gwadera and prof.
 Karl Aberer who were supervising the Master Thesis project of the first
 author.
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "refs"
options "plainnat"

\end_inset


\end_layout

\end_body
\end_document
