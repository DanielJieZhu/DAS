#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass scrreprt
\begin_preamble
%\documentclass[smallheadings]{scrreprt}

%\usepackage[titletoc]{appendix}
\usepackage[margin=1.3in,a4paper]{geometry}
%\usepackage[T1]{fontenc}
\usepackage[scaled]{beramono}


%\usepackage{fullpage}

%\usepackage[ backend=biber,   style=authoryear-icomp,    sortlocale=en_US,    natbib=true,    url=true,     doi=true,    eprint=false]{biblatex}



\usepackage{hyperref}
\bibliographystyle{plainurl} 

% fancy verbatim
\usepackage{fancyvrb}
%\usepackage{appendix}

% smaller titles
%\usepackage[small,compact]{titlesec}
% actually smallheadings class works even better

% fix floats
\usepackage{placeins} % put this in your pre-amble
\usepackage{flafter}  % put this in your pre-amble




%\usepackage{titling}
%\setlength{\droptitle}{-6em}
%\posttitle{\par\end{center}\vspace{-5em}}


%This command will change the default Bibliography to References
\AtBeginDocument{
        \renewcommand{\bibname}{References}
        \renewcommand{\nomname}{List of Symbols and Abbreviations}
       \let\oldmarginpar\marginpar
    % TO hide margin notes in the final:
     %\renewcommand\marginpar[1]{}
     \renewcommand\marginpar[1]{{\oldmarginpar[#1]{\footnotesize{#1}}}}

}

% \usepackage{minitoc}

%\renewcommand*{\toclevel@section}{1}
%\renewcommand*{\toclevel@subsection}{2}

% Redefining automatic label of Figure, Table and Eq.
\usepackage{prettyref}
\newrefformat{tab}{Table\,\ref{#1}}
\newrefformat{fig}{Figure\,\ref{#1}}
\newrefformat{eq}{Eq.\,\textup{(\ref{#1})}}
\end_preamble
\options titlepage,abstract,titlesec,mediumheadings
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\maintain_unincluded_children false
\language british
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command bibtex
\index_command default
\paperfontsize 11
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine natbib_authoryear
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\notefontcolor #acacac
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Titlehead
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="top">
<column alignment="left" valignment="top" width="40page%">
<column alignment="left" valignment="top" width="40page%">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename figures/EPFL_LOG_QUADRI_Red.pdf
	height 2.5cm

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename figures/CERN_logo.svg
	lyxscale 30
	height 2.5cm

\end_inset

 
\begin_inset Graphics
	filename figures/CMS-Grey.eps
	lyxscale 30
	height 2.5cm

\end_inset

 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Distributed Information Systems Laboratory
\end_layout

\begin_layout Plain Layout
School of Computer and Communications
\end_layout

\begin_layout Plain Layout
Swiss Federal Institute of Technology, Lausanne
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Computing department
\end_layout

\begin_layout Plain Layout
Compact Muon Solenoid Experiment
\end_layout

\begin_layout Plain Layout
European Organization for Nuclear Research
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subject
Master Thesis
\end_layout

\begin_layout Title
Keyword Search in Data Service Integration
\end_layout

\begin_layout Author
Vidmantas Zemleris
\lang english

\begin_inset Newline newline
\end_inset


\lang british
Section of Computer Science (IC)
\end_layout

\begin_layout Publishers

\series medium
Supervised by:
\series default

\begin_inset Newline newline
\end_inset


\series bold
phd.
 Robert Gwadera (LSIR, EPFL)
\begin_inset Newline newline
\end_inset

prof.
 Karl Aberer (LSIR, EPFL)
\series default
\lang english

\begin_inset Newline newline
\end_inset

phd.
 Valentin Kuznetcov (CERN)
\begin_inset Newline newline
\end_inset

phd.
 Peter Kreuzer (CERN)
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Abstract

\lang english
TO BE UPDATED
\end_layout

\begin_layout Publishers
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Abstract

\color red
Data integration provides a centralized solution for locating and combining
 data from multiple sources.
 The complexity of writing structured-queries is impacting not only simple
 users who are forced to learn the schema and the query language, but also
 the tech-savvy users who may have only a vague idea of where exactly to
 find the data they need.
 
\end_layout

\begin_layout Abstract

\color red
In this work we explore more intuitive alternatives such as keyword and
 natural language search, which, in fact, received fairly little attention
 in the field of data services integration.
 First, we review the state-of-the-art of approaches to searching data services
 including ways how these systems could self-adapt to users’ needs by taking
 into account historical queries and their results.
 Then, a keyword search system over enterprise data integration is presented
 that, given a keyword query, proposes top-k most probable structured queries
 which could be later answered using current data integration infrastructure.
 The system was developed and evaluated in the setting of a scientific collabora
tion of over 3,000 physicists at the CMS Experiment, CERN.

\series bold
 
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout

\series bold
\color red
TODO: abstract shall be shorter? 50-100 words; rewrite it!
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomencl_print
LatexCommand printnomenclature
set_width "auto"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%
\backslash
addcontentsline{toc}{chapter}{List of Symbols and Abbreviations}
\end_layout

\end_inset


\end_layout

\begin_layout Section*
\begin_inset Note Note
status collapsed

\begin_layout Section*
Preface
\end_layout

\begin_layout Plain Layout

\color red
A statement indicating the relative contributions of all collaborators and
 co-authors (including supervisors and members of the supervisory committee)
 of publications or material submitted for publication,emphasizing details
 of the student's contribution and stating the proportion of research and
 writing conducted by the student.
 The statement should include details about the student's contribution to
 the following: 
\end_layout

\begin_layout Plain Layout

\color red
Identification and design of the research program 
\end_layout

\begin_layout Plain Layout

\color red
Performance of the various parts of the research 
\end_layout

\begin_layout Plain Layout

\color red
Analysis of the research data
\end_layout

\begin_layout Plain Layout

\color red
Preparation of manuscripts, if any 
\end_layout

\begin_layout Plain Layout
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
12.
 Introduction
\end_layout

\begin_layout Plain Layout
The introduction to the thesis must outline the theme, hypotheses and/or
 goals of the thesis and provide sufficient information to enable a non-speciali
st researcher to understand these.
 It must contain the elements listed below.
 The way in which these elements are incorporated will depend on the particular
 discipline.
\end_layout

\begin_layout Plain Layout
A thorough review of relevant literature A clear statement of the research
 question – the hypotheses and/or goals of the research 13.
 Research chapters
\end_layout

\begin_layout Plain Layout
The account of the research should be presented in a manner suitable for
 the field and include the following:
\end_layout

\begin_layout Plain Layout
A coherent structure that flows logically and smoothly from chapter to chapter
 A brief synopsis at the beginning of each research chapter A description
 of methods used, in sufficient detail to enable a reader to understand
 how the data were gathered and to apply similar methods in another study
 A complete account of the research presented in a systematic manner typical
 of the field of study Students should consult with their supervisors for
 further guidance about how to structure their particular thesis.
\end_layout

\begin_layout Plain Layout
14.
 Conclusion
\end_layout

\begin_layout Plain Layout
In this section the student must demonstrate his/her mastery of the field.
\end_layout

\begin_layout Plain Layout
The section includes the following:
\end_layout

\begin_layout Plain Layout
Overall analysis and integration of the research and conclusions of the
 thesis in light of current research in the field Conclusions regarding
 goals or hypotheses of the thesis that were presented in the Introduction,
 and the overall significance and contribution of the thesis research Comments
 on strengths and limitations of the thesis research Discussion of any potential
 applications of the research findings An analysis of possible future research
 directions in the field drawing on the work of the thesis
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section*
Acknowledgements
\end_layout

\begin_layout Standard
This work was financially supported by the Computing group of the Compact
 Muon Solenoid Experiment at the European Organization for Nuclear Research
 (CERN).
 The author of this report is thankful to Robert Gwadera and prof.
 Karl Aberer who supervised this Master Thesis project.
\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Chapter
Introduction
\end_layout

\begin_layout Standard
Virtual integration of data-services (also referred to as Enterprise Information
 Integration, EII
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "EII"
description "Enterprise Information Integration\\\\"

\end_inset

) is beneficial when the other 
\color blue
information integration
\begin_inset Marginal
status open

\begin_layout Plain Layout

\color blue
a better term?
\end_layout

\end_inset


\color inherit
 approaches are not applicable
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
for instance, publish-subscribe approach is not applicable in the presence
 of proprietary (and reluctant to change) systems, data-warehousing is too
 heavy and complex then large portions of data is volatile
\end_layout

\end_inset

.
 In EII, data physically stays at its origin, and is requested only on demand,
 usually, through structured query languages such as the 
\emph on
SQL
\emph default
, which present a 
\color blue
number of user interface issues.
\end_layout

\begin_layout Standard
The objective of this work is to research the keyword search as a more intuitive
 alternative, which
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
, being the most popular way for discovering data online
\begin_inset CommandInset citation
LatexCommand citep
key "what_are_we_searching_2012"

\end_inset


\end_layout

\end_inset

, in fact, received little attention in the field of data service integration
\begin_inset CommandInset citation
LatexCommand citep
key "nl_to_dataservices_guerrisi2012natural"

\end_inset

.
 Virtual integration presents an additional challenge - only limited access
 to the data instances is available.
 
\end_layout

\begin_layout Standard
Building on the experience gained while working on an EII system
\series bold
 
\series default
at the 
\emph on
CMS Experiment
\emph default
 at 
\emph on
CERN
\emph default
, we will focus on the implementation of keyword search and the mechanisms
 for user feedback, also touching some
\series bold
 
\series default
more distant topics such as usability and performance of an EII.
\end_layout

\begin_layout Section
Motivation
\end_layout

\begin_layout Standard
At scientific collaborations such as the 
\emph on
CMS Experiment at CERN
\emph default
, where this work has been conducted, data often resides on a fair number
 of autonomous systems each serving its own purpose
\series bold
\color red

\begin_inset Foot
status collapsed

\begin_layout Plain Layout
At CERN, due to many reasons (e.g.
 research-orientedness and need of freedom, politics of institutes involved)
 software projects usually evolve in independent fashion, resulting in fair
 number of proprietary systems
\begin_inset CommandInset citation
LatexCommand citep
key "Koch00CERN"

\end_inset

, whereas high turnover makes it harder to extend these systems 
\end_layout

\end_inset


\series default
\color inherit
.
 As data stored on one system may be related to data residing on the others,
 users are in need of a centralized and easy-to-use solution for locating
 and combining data from all these multiple sources.
 
\end_layout

\begin_layout Standard
The EII, solves the data integration problem even when data is volatile
 and systems are
\series bold
 
\series default
heterogeneous and reluctant to change, however the complexity of writing
 such queries first impacts the simple users, forcing them to learn the
 
\begin_inset Quotes eld
\end_inset

schema
\begin_inset Quotes erd
\end_inset

 and the query language.
 However, even the tech-savvy users may have only a vague idea of where
 exactly to find what they need.
\end_layout

\begin_layout Standard
As an another example, the web search engines, which are becoming close
 to generic question-answering 
\color blue
engines
\color inherit

\begin_inset Foot
status collapsed

\begin_layout Plain Layout
for instance, on the Google search engine, information on weather, currency
 rates, time at given location, etc.
 is already available through recognition of certain patterns in web queries
\end_layout

\end_inset

, could employ the methods presented in this work, for providing the immediate
 answers to certain types of queries, whose results can not be pre-cached,
 but are available on the vast quantities of continuously growing public,
 corporate, or governmental data services.
 For instance, the query 
\begin_inset Quotes eld
\end_inset

tnt 123456789
\begin_inset Quotes erd
\end_inset

 can be interpreted as requesting the tracking information for a given TNT
 shipment tracking code.
\color red

\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Section
Structure of the work and our contributions
\end_layout

\begin_layout Standard
First, we present an overview of the state-of-the-art in the field
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
 various approaches to the problem and the related works
\end_layout

\end_inset

 (section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:State-of-the"

\end_inset

).
 
\end_layout

\begin_layout Standard

\series bold
\color red
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout

\series bold
\color magenta
innovation???
\end_layout

\begin_layout Plain Layout

\color magenta
relaxed assumptions? (To check)
\end_layout

\begin_layout Plain Layout

\color magenta
autocompletion?
\end_layout

\end_inset


\series default
\color inherit
Then, in chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Keyword-Search-over-DataServices"

\end_inset

, the design and implementation of a keyword search engine is presented,
 that given a keyword query, proposes top-k most probable structured queries
 which can later be answered over data service integration at the CMS Experiment
, CERN.
 We propose a combined string similarity metric, discuss the presentation
 of results, and propose combining keyword search with auto-completion
\series bold
\color red
 
\series default
in a unique way.
\end_layout

\begin_layout Standard
Next, in chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Incorporating-User-Feedback"

\end_inset

, we discuss approaches allowing to incorporate
\series bold
\color red
 
\series default
\color inherit
users feedback into keyword search over EII.
 The earlier mentioned auto-completion would allows getting feedback of
 higher quality without overloading the users, that could be used for improving
 various parts of the system
\series bold
 
\series default
(for future work).
 
\end_layout

\begin_layout Standard
In chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Case-study:CMS"

\end_inset

, a case study
\series bold
 
\series default
covers some real-world issues an EII system may face, such as data-service
 performance,
\color red
 [users confusion - intricacy of a query language where the fields in the
 results for same entity differs depending on the query] 
\color inherit
and discusses ways for solving these.

\series bold
 
\end_layout

\begin_layout Standard
Finally, in chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Evaluation"

\end_inset

, the developed system is evaluated quantitatively using test queries and
 qualitatively through user feedback.
\end_layout

\begin_layout Standard

\emph on
Note:
\emph default
 The project included these time-demanding tasks: 1) choosing a precise
 topic to focus on - because the area is not so actively researched and
 there is no concise terminology
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
e.g.
 virtual data integration, enterprise information integration, data virtualizati
on are used as synonyms throughout different time periods; works on keyword
 search over EII mostly focused on relational databases (with limited access
 to data instances)
\end_layout

\end_inset

, this has took a considerable amount of time, and 2) case analysis at the
 CMS Experiment included analysing query logs, benchmarking the performance
 bottlenecks; a users survey, tutorials and presentations.
\end_layout

\begin_layout Section
State of the Art in the field
\begin_inset CommandInset label
LatexCommand label
name "sec:State-of-the"

\end_inset


\end_layout

\begin_layout Standard

\lang english
During the last 15 years, significant experience has been accumulated in
 the field of 
\shape italic
Enterprise Information Integration
\shape default

\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\lang english
Enterprise Information Integration (EII) is about 'integrating data from
 multiple sources 
\shape italic
without
\shape default
 having to to first load data into a central warehouse'
\begin_inset CommandInset citation
LatexCommand citep
after "p.1"
key "eii_2005"

\end_inset


\end_layout

\end_inset

 (EII) including: data integration formalisms, ways of describing heterogeneous
 data sources and their abilities (e.g.
 database vs web form), query optimization (combining sources efficiently,
 source overlap, data quality, etc)
\begin_inset CommandInset citation
LatexCommand citep
key "eii_2005"

\end_inset

.
 Recent research in Enterprise Information Integration mostly focused on
 approaches minimizing human efforts on source integration, e.g.
 on probabilistic self-improving EII systems
\begin_inset CommandInset citation
LatexCommand citep
after "ch.19"
key "principles_data_integration"

\end_inset

.
 Meanwhile, to the best of our knowledge, the 
\shape italic
Boolean Keyword-based search over data services
\shape default
, which is our main focus, received little attention from the research community
, with only few attempts 
\begin_inset CommandInset citation
LatexCommand citep
before "e.g."
key "keymantic_kws_metadata_bergamaschi2011,bergamaschi2011hidden,nl_to_dataservices_guerrisi2012natural"

\end_inset

 to address the problem.
\end_layout

\begin_layout Standard

\lang english
\begin_inset Marginal
status open

\begin_layout Plain Layout

\color yellow
TODO: Query Forms approach that propose SQL templates
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
\begin_inset CommandInset include
LatexCommand input
preview true
filename "sub_chapters/literature_overview_short.tex"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Nature of keyword queries
\end_layout

\begin_layout Standard
Keyword queries are often underspecified, therefore every possible interpretatio
n shall be included in the results
\begin_inset CommandInset citation
LatexCommand citep
key "Kws_metadata_2011"

\end_inset

.
 
\lang english
But for a given keyword query, some interpretations are more likely than
 the others, therefore, when the users are interested in complete answer
 sets, the standard approach is to produce a ranked list of most-likely
 structured queries
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\lang english
e.g.

\shape italic
 
\emph on
the
\emph default
 SODA
\shape default

\begin_inset CommandInset citation
LatexCommand citep
key "ethz2012"

\end_inset

 system proposes SQL over a large data-warehouse, or 
\emph on
Keymantic
\emph default

\begin_inset CommandInset citation
LatexCommand citep
key "keymantic10"

\end_inset

 attempting the same without accessing the data
\end_layout

\end_inset

.

\lang british
 
\end_layout

\begin_layout Standard
It has been noticed that even if keyword queries do not have any clear syntactic
 structure, keywords referring to related concepts usually come close to
 each other in the query
\begin_inset CommandInset citation
LatexCommand citep
key "characterization_search_behaviour_kumar2009,Kws_metadata_2011"

\end_inset

.
 Based on this, most of the existing approaches employ the dependencies
 of nearby keywords for ranking the candidate answers: 
\emph on
Keymantic
\emph default

\begin_inset CommandInset citation
LatexCommand citep
key "keymantic10"

\end_inset

 includes heuristic rules that score higher whose query interpretations
 where the nearby keywords have related labels assigned
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
e.g.
 schema term's name followed by its value, for instance in query 
\begin_inset Quotes eld
\end_inset

restaurant Italia
\begin_inset Quotes erd
\end_inset

, the second term would probably mean name of restaurant
\end_layout

\end_inset

, or in machine learning approaches this justifies usage of sequential models
 such as the Hidden Markov Model in 
\emph on
KEYRY
\emph default

\begin_inset CommandInset citation
LatexCommand citep
key "bergamaschi2011hidden"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Second, the average query length continues to increase, which shows that
 users are moving towards preference of expressing their information need
 in natural languages than just typing keywords.
 
\begin_inset Quotes eld
\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
http://searchuserinterfaces.com/book/sui_ch12_emerging.html
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Related work
\end_layout

\begin_layout Standard

\lang english
Two works were identified to be closely related to our problem: heuristics-based
 keyword search (
\emph on
Keymantic
\emph default
), and the machine learning approach (
\emph on
KEYRY
\emph default
).
\end_layout

\begin_layout Description
Keymantic
\begin_inset CommandInset citation
LatexCommand citep
key "keymantic_kws_metadata_bergamaschi2011,keymantic10"

\end_inset

 answers keyword queries over relational databases with limited access to
 the database instance, which is also the case of data integration
\begin_inset CommandInset citation
LatexCommand citep
key "keymantic10"

\end_inset

.
 
\begin_inset Newline newline
\end_inset

First, based on meta-data,individual keywords are scored as potential matches
 to 
\emph on
schema terms
\emph default
 
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
in EII, only limited access to data instances is available, therefore instead
 of just indexing the all data, the meta-data shall be used
\end_layout

\end_inset

 (to names of entities and their attributes using some entity matching technique
s) or as potential 
\emph on
value
\emph default
 matches (by checking if the keyword matches any available constraints,
 such as the regular expressions imposed by the database or data-services).
 Then, based on a number of heuristics the scores are combined, exploiting
 the earlier mentioned dependencies between the nearby keywords.
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
\begin_inset Note Note
status open

\begin_layout Plain Layout
We present a case study of Data Integration Systems at the CMS Collaboration,
 CERN, including performance analysis, usability and other aspects.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\series bold
\begin_inset Marginal
status open

\begin_layout Plain Layout

\series bold
\color red
TODO:
\series default
 introduce the paper; add motivation: usefulness of KWS/NLs, contradicting
 results; lack of research in the field of KW/NL Search over Web Services;
 needs of CMS.
 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Also some of the data may be changing often, services have limitations on
 their interfaces, and users are interested in complete and up-to-date answers
 (i.e.
 Boolean Retrieval), the problem of keyword search becomes more complex
 as it is hard or even impossible to materialize/index all the contents
 in one central place.
 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\series bold
\color red
TODO
\series default
: present the problem in general, setting at CMS and our solution
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\color red
TODO: add a motivating example in the beginning!
\end_layout

\begin_layout Plain Layout

\color red
Major problems:
\end_layout

\begin_layout Itemize
what is more suitable for querying information: keywords, full sentence,
 or restricted structured language
\end_layout

\begin_layout Itemize
keyword search is too much ambiguous (for searching structured data)
\end_layout

\begin_layout Itemize
full sentences are long to write, and often hard to process as there are
 many ways of expressing same idea
\end_layout

\begin_layout Itemize
structured language must be learned, including schema terms and its 
\begin_inset Quotes eld
\end_inset

grammar
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Subparagraph
Intro, Usability issues
\end_layout

\begin_layout Plain Layout
TODO: discuss differences between Structured, Keyword and NL Search
\end_layout

\begin_layout Plain Layout
refer to Paper...
\end_layout

\begin_layout Plain Layout
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
There exist a number of ways for expressing user's information need, some
 being more natural for users, but harder to interpret for a machine (e.g.
 natural language (NL) or keyword queries), structured query or through
 any other interfaces such as predefined Query Forms.
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Communicating User's Intent
\end_layout

\begin_layout Plain Layout
Deciding on what is the best suited for 
\series bold
communicating user's intent
\series default
 is a problem, where recent studies reported disagreement in their results.
 Some users prefer writing queries as complete sentences that is more natural
 
\begin_inset CommandInset citation
LatexCommand citep
key "2011natural,ethz_kaufmann2007nl_int"

\end_inset

 than the faster to type keyword queries, which on the other hand are even
 more ambiguous.
 Others prefer the structured languages that are 
\series bold
the easiest
\series default
 to process by a machine, but incurs a steeper learning curve (as the correspond
ing grammar and the lexicon has to be learned).
\end_layout

\begin_layout Plain Layout
[XYZ] pointed out that 
\color magenta

\begin_inset Quotes eld
\end_inset

the research suggests people prefer to state their information need rather
 than use keywords.
 But after first using a search engine they quickly learned that full questions
 resulted in failure.
\begin_inset Quotes erd
\end_inset

 http://people.ischool.berkeley.edu/~hearst/talks/upitt.pdf
\end_layout

\begin_layout Plain Layout
\begin_inset Note Note
status collapsed

\begin_layout Subsubsection
Semantic Web Services
\end_layout

\begin_layout Plain Layout
Having detailed semantic Web Service descriptions would help interpreting
 more complex queries (in example of CMS Experiment, such as 'smallest 
\series bold
file
\series default
 in /SingleElectron/Run2011A-WElectron-*/RAW-RECO with 
\series bold
number 
\bar under
of events
\series default
\bar default
 between 100 and 1000', where 'number of events' is actually referring to
 an attribute 
\emph on
nevents
\emph default
 of a file (file.nevents).
\end_layout

\begin_layout Plain Layout

\color magenta
Domain ontology is needed
\end_layout

\begin_layout Plain Layout
There is a number of technologies that allow data and service providers
 to describe semantically services their services and resources, such as
 the 
\begin_inset Quotes eld
\end_inset

Simple Semantic Web Architecture and Protocol
\begin_inset Quotes erd
\end_inset

 (SSWAP) that uses third-party ontologies.
\end_layout

\begin_layout Plain Layout
Gessler DDG, Schiltz GS, May GD, Avraham S, Town CD, Grant D, Nelson RT:
 SSWAP: A Simple Semantic Web Architecture and Protocol for semantic web
 services.
 BMC Bioinformatics 2009, 10:309.
\end_layout

\begin_layout Plain Layout

\color magenta
In this work, we assume that the extensive service semantic descriptions
 are already existing, or are not needed, and focus on the process of translatio
n between keyword queries and the structured ones.
\end_layout

\begin_layout Plain Layout
http://www.jbiomedsem.com/content/pdf/2041-1480-2-8.pdf
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Marginal
status collapsed

\begin_layout Plain Layout

\series bold
\color red
it seems it was summing the scores (no log()!) Weighted-bipartite matching
 as optimization; still exponencial because of first step?
\end_layout

\end_inset


\end_layout

\begin_layout Description
KEYRY
\begin_inset CommandInset citation
LatexCommand citep
key "bergamaschi2011hidden"

\end_inset

 attempts to incorporate users feedback through learning an HMM tagger that
 is given the keywords as its input.
 It uses the List-Viterbi
\begin_inset CommandInset citation
LatexCommand citep
key "list_viterbi_1994"

\end_inset

 algorithm to produce the top-k most probable tagging sequences (where tags
 represent the 
\begin_inset Quotes eld
\end_inset

meaning
\begin_inset Quotes erd
\end_inset

 of each keyword).
 This is converted into a list of SQL queries and presented to the users.
 
\begin_inset Newline newline
\end_inset

The HMM is first initialized through the supervised training, but even if
 no training data is available, the initial HMM probability distributions
 can be estimated through a number of heuristic rules (e.g.
 promoting related tags).
 Later, user's feedback can be used for further 
\series bold
\color red
supervised
\series default
\color inherit
 training, while even the keyword queries itself, can serve for unsupervised
 learning
\begin_inset CommandInset citation
LatexCommand citep
key "keymantic_list_viterbi_training_rota2011"

\end_inset

.
\begin_inset Newline newline
\end_inset

According to 
\begin_inset CommandInset citation
LatexCommand citep
key "bergamaschi2011hidden"

\end_inset

 the accuracy of Keymantic and KEYRY systems didn't differ much
\begin_inset Marginal
status open

\begin_layout Plain Layout

\color blue
but they mentioned a better evaluation may be needed...
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
String
\begin_inset space ~
\end_inset

and
\begin_inset space ~
\end_inset

Entity
\begin_inset space ~
\end_inset

Matching provides the possible interpretations of individual keywords, as
 entry points for further processing.
 From the fields of information retrieval, entity and string matching, vast
 amounts of works exist, including various methods for calculating string,
 word and phrase similarities: string-edit distances, learned string distances
 
\begin_inset CommandInset citation
LatexCommand citep
key "string_edit_crf_mccallum2012conditional"

\end_inset

, and frameworks for semantic similarity.
\end_layout

\begin_layout Description

\series bold
Natural
\begin_inset space ~
\end_inset

Language
\begin_inset space ~
\end_inset

Processing
\begin_inset space ~
\end_inset

(NLP)
\series default
\lang english
 could be useful
\lang british
 in gaining the better understanding of the meaning of a question or a query.
 
\lang english
Large amount of works exist on Question Answering and NLP
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "NLP"
description "Natural Language Processing"

\end_inset


\lang british
 including: question focus extraction identifying the requested entit(-ies),
 parsing into predicate argument structure providing more generic representation
 of a sentence (e.g.
 removing differences between passive and active voices) simplifies further
 analysis, the relation extraction allows grasping more exact relationships
 between constituents of a clause
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
especially good for a small predefined set of important relations, but requires
 lots of manual work; less common relations can be covered through machine-learn
ing based relation extraction, but that requires large corpus
\begin_inset CommandInset citation
LatexCommand citep
key "watson_2012relation"

\end_inset


\end_layout

\end_inset

, word sense disambiguation and other semantic techniques allow choosing
 more semantically correct interpretations.
\begin_inset Newline newline
\end_inset

It is worth mentioning, that the current state-of-the art methods such as
 the
\emph on
 IBM Watson
\emph default

\begin_inset CommandInset citation
LatexCommand citep
key "watson_introduction_ferrucci2012"

\end_inset

, a complex open-domain question answering system, do not even try gaining
 the complete understanding of the question (which is still a very challenging
 task), but focuses instead on scoring and analysing the alternative interpretat
ions of questions and result candidates.
\end_layout

\begin_layout Description

\color magenta
NL
\begin_inset space ~
\end_inset

interfaces
\begin_inset space ~
\end_inset

to
\begin_inset space ~
\end_inset

Data
\begin_inset space ~
\end_inset

Services:
\color inherit
 
\begin_inset CommandInset citation
LatexCommand citep
key "nl_to_dataservices_guerrisi2012natural"

\end_inset


\series bold
\lang english
 
\series default
attempts to process multi-domain
\series bold
 
\series default
full-sentence natural language queries over web-services.
 It uses focus extraction to find the focus entity, splits the query into
 constituents (sub-questions), classifies the domain of each constituent,
 and then tries to combine and resolve these constituents over the data
 service interfaces (tries recognizing the intent modifiers [e.g.
 adjectives] as parameters to services).
 
\color magenta
( too ambitious/not-mature; open domain, real natural language questions
 - a bit farther from our focus, our domain is very specific.).

\color inherit
 
\begin_inset Note Note
status open

\begin_layout Description
as part of 
\begin_inset Quotes eld
\end_inset

Search
\begin_inset space ~
\end_inset

Computing
\begin_inset Quotes erd
\end_inset

 project....
\end_layout

\end_inset


\end_layout

\begin_layout Description

\lang english
Searching
\begin_inset space ~
\end_inset

structured
\begin_inset space ~
\end_inset

DBs The problem of keyword search over relational and other structured databases
 received a significant attention within the last decade.
 It was explored from a number of perspectives: returning top-k ranked data-tupl
es
\shape italic

\begin_inset CommandInset citation
LatexCommand citep
key "spark2_luo2011"

\end_inset


\shape default
 vs suggesting structured queries as SQL
\begin_inset CommandInset citation
LatexCommand citep
key "ethz2012"

\end_inset

, performance optimization, 
\color red
user feedback mechanisms
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout

\color red
\lang english
what in addition to schema mappings for item-based ranking?
\end_layout

\end_inset

,
\color inherit
 keyword searching over distributed sources, up to lightweight exploratory
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\lang english
because of probabilistic nature of schema mappings, it do not provide 100%
 result exactness
\end_layout

\end_inset

 probabilistic data integration based on users-feedback that minimize the
 upfront human effort required
\begin_inset CommandInset citation
LatexCommand citep
after "ch.16"
key "principles_data_integration"

\end_inset

.
 On the other extreme, the 
\shape italic
SODA
\begin_inset CommandInset citation
LatexCommand citep
key "ethz2012"

\end_inset


\shape default
 system has proved that if enough meta-data is in place, even quite complex
 queries given in business terms could be answered over a large and complex
 warehouse.
\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Chapter
Keyword Search over Data Services
\begin_inset CommandInset label
LatexCommand label
name "chap:Keyword-Search-over-DataServices"

\end_inset


\end_layout

\begin_layout Section
Problem statement
\end_layout

\begin_layout Standard
\begin_inset Wrap figure
lines 0
placement o
overhang 0col%
width "50col%"
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-60pt}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename figures/problem_statement_das_service_ex.pdf
	width 50text%

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-10pt}
\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
a data-service (simplified)
\end_layout

\end_inset


\end_layout

\end_inset

 Given an EII system, capable of answering structured queries, we are interested
 in translating the keyword query into the corresponding structured query.
 A keyword query, KWQ
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "KWQ"
description "keyword query\\\\"

\end_inset

 is an ordered tuple of 
\begin_inset Formula $n$
\end_inset

 keywords 
\begin_inset Formula $\left(kw_{1},kw_{2},..,kw_{n}\right)$
\end_inset

.
 Answering a keyword query is 
\emph on
interpreting
\emph default
 it in terms of its semantics over the 
\emph on
\color magenta
integration schema.
 
\emph default
\color inherit
We are given the following 
\color magenta
metadata
\emph on
 
\emph default
(
\emph on
virtual integration schema
\emph default
)
\color inherit
: 
\end_layout

\begin_layout Itemize

\emph on
schema
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "schema"
description "by schema we refer to the integration schema (virtual schema based of entities exposed by the services)"

\end_inset

 terms
\emph default

\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "schema terms"
description "names of entities in integration schema and their attributes (names of either inputs to the services or their output fields)"

\end_inset

: names of entities in 
\emph on
integration schema
\emph default
 and their attributes (names of either 
\emph on
inputs
\emph default
 to the services or their 
\emph on
output
\emph default
 fields)
\end_layout

\begin_layout Itemize
information about possible 
\emph on
value terms
\emph default

\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
(domain vocabulary)
\end_layout

\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "value terms"
description "values of entity attributes (that could be input parameters of data services, or be contained in their results)"

\end_inset

:
\end_layout

\begin_deeper
\begin_layout Itemize
for some fields, we have a list of possible values
\end_layout

\begin_layout Itemize
the
\emph on
 service mappings
\emph default
 define the
\emph on
 constraints
\emph default
 on values allowed as data-service inputs (required fields, regular expressions
 defining the values accepted)
\end_layout

\end_deeper
\begin_layout Standard
Consider these two queries: 
\begin_inset Quotes eld
\end_inset


\emph on
what is the 
\color red
average 
\color inherit
size of Zmmg datasets where number of events is more than 1000
\emph default

\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset


\emph on
avg dataset size Zmmg number of events>1000
\emph default

\begin_inset Quotes erd
\end_inset

.
 For both, the expected structured query is: (in YQL
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
YQL 
\begin_inset CommandInset href
LatexCommand href
name "http://developer.yahoo.com/yql/"
target "http://developer.yahoo.com/yql/"

\end_inset

 is a SQL-like language for querying webservices; in our implementation
 we actually translate the queries into DAS-QL (described on the 
\emph on
CMS
\emph default
 Case Study, on chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Case-study:CMS"

\end_inset

): 
\family typewriter
dataset dataset=*Zmm* | grep dataset.nevents > 1000 | avg(dataset.size)
\end_layout

\end_inset

, prefix 
\family typewriter
in_
\family default
 indicates field as data-service 
\emph on
input
\emph default
, and 
\family typewriter
out
\emph on
_
\family default
\emph default
 as the 
\emph on
output
\emph default
):
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

{
\backslash
small
\backslash
begin{Verbatim}[commandchars=
\backslash

\backslash

\backslash
{
\backslash
}]
\end_layout

\begin_layout Plain Layout


\backslash
textbf{select} avg(out_size) 
\backslash
textbf{from} datasets 
\backslash
textbf{where} in_name 
\backslash
textbf{like} '*Zmm*' 
\backslash
textbf{AND} out_nevents > 1000
\end_layout

\begin_layout Plain Layout


\backslash
end{Verbatim}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
DASQL -its semantics actually represent the physical operations with services
 (conditions before first 
\begin_inset Quotes eld
\end_inset

|
\begin_inset Quotes erd
\end_inset

 are inputs for data-services, while afterwards the filters and aggregates
 are applied to the outputs of services)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In this work, we consider only 
\emph on
conjunctive queries
\emph default
 
\color blue
augmented with simple aggregation functions without grouping
\begin_inset Marginal
status open

\begin_layout Plain Layout

\color blue
aggregations not so important; not yet fully implemented
\end_layout

\end_inset


\color inherit
 (that correspond to select-project
\color magenta
-join
\color inherit
 in SQL, where selections can be composed only of conjunctions) as potential
 results.
 In the particular case of DASQL used at the 
\emph on
CMS Experiment
\emph default
, we want to map a keyword query into:
\end_layout

\begin_layout Itemize
type of result entity (e.g.
 datasets) and projections of fields in the service outputs
\end_layout

\begin_layout Itemize
filters on service inputs, e.g.
 in_name like ’*Zmm*’ 
\end_layout

\begin_layout Itemize
post-filters on service outputs: e.g.
 out_nevents > 1000 
\end_layout

\begin_layout Itemize
basic aggregation functions: e.g.

\color blue
 
\color inherit
avg(out_size)
\end_layout

\begin_layout Section
Available solutions
\end_layout

\begin_layout Standard
In the following section, we present a fairly simple heuristics-based implementa
tion, where we focused on the quality of results and on not enforcing any
 assumptions on the input queries (it could be full-sentence or keyword
 queries; still if some patterns hold, we are able improve the results
\begin_inset Marginal
status open

\begin_layout Plain Layout

\series bold
\color cyan
?? unlike Keymantic which had assumptions!?
\end_layout

\end_inset

).
 The heuristics-based approach 
\series bold
\color red
is designed
\series default
\color inherit
 with the goal to be replaced by user feedback-lead machine learning approach
 once sufficient amount of historical query data and user's feedback is
 available for the training.
\end_layout

\begin_layout Standard

\color blue
Knowing the constraints on the project duration, we did excluded this from
 implementation: Question Answering approaches with deep language processing;
 complex service orchestration (feeding of outputs into inputs of other
 services), which is not directly supported by the EII system and the service
 performance is not adequate for this 
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\color blue
this due to issues with data service performance and unavailability of basic
 capabilities such as pagination or sorting of their results; we do not
 control the data services, so a number of suggestions for the providers
 have been proposed (see section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:cms-Performance-Issues"

\end_inset

); second, these improvements would take a considerable effort to be implemented
, pushing this far beyond the scope of this project
\end_layout

\end_inset

; also we did not focus on the performance (which is OK without optimizations,
 and was already covered by the earlier works)
\color inherit
.
\end_layout

\begin_layout Standard

\color magenta
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\color magenta
The approaches below are useful then there is no possibility to index the
 data terms, e.g.
 then a DB is behind a wrapper (e.g.
 accessible only through a 
\emph on
Web form
\emph default
 in “Hidden Web” or a 
\emph on
web-service
\emph default
) then crawling is generally not possible.
\end_layout

\end_inset


\color inherit
\lang english

\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\lang english
We distinguish two methods of translating 
\emph on
keyword queries
\emph default
 into a ranked list of best-matching 
\emph on
structured queries
\emph default
: the heuristics-based approach 
\color red
exhaustively evaluating the possible alternatives
\color inherit
, and the machine learning approach, that would allow taking users feedback
 into account.
\end_layout

\end_inset


\begin_inset Newpage clearpage
\end_inset


\lang british

\begin_inset Wrap figure
lines 0
placement r
overhang 1cm
width "40col%"
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
vspace{-10pt}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename figures/keymantic_workflow.png
	lyxscale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
vspace{-10pt}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout

\color red
Keyword query translation process in Keymantic
\color inherit
 (source:
\begin_inset CommandInset citation
LatexCommand citep
after "p. 1639"
key "keymantic10"

\end_inset

)
\begin_inset CommandInset label
LatexCommand label
name "fig:Keymantic-query-translation"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Heuristics-based approach
\end_layout

\begin_layout Standard
Taking inspiration from Keymantic 
\begin_inset CommandInset citation
LatexCommand citep
key "keymantic10"

\end_inset

, a keyword query is processed as follows (see Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Keymantic-query-translation"

\end_inset

).
 
\end_layout

\begin_layout Standard
Firstly, the keyword query is pre-processed by the 
\emph on
tokenizer
\emph default
: it is cleans up the query, identifies any explicit phrase tokens, or basic
 operators (see section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Tokenizer"

\end_inset

).
\end_layout

\begin_layout Standard
Secondly, employing a number of string matching techniques based on metadata
\begin_inset Note Note
status open

\begin_layout Plain Layout
including: a custom string similarity function, regular expressions constraining
 the inputs to data services, and listing of possible values for some input
 parameters (what's more some of value terms may contain wildcards)
\end_layout

\end_inset

 , the 
\begin_inset Quotes eld
\end_inset


\emph on
entry points
\emph default

\begin_inset Quotes erd
\end_inset

 are identified: for each keyword, we obtain a listing of schema
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
schema term is the name of an entity or it's attribute in the integration
 schema (e.g.
 the 
\begin_inset Quotes eld
\end_inset

result type
\begin_inset Quotes erd
\end_inset

, input parameter or output field for some data service)
\end_layout

\end_inset

 and value
\series bold

\begin_inset Foot
status collapsed

\begin_layout Plain Layout
value term - is the name of schema term which could gain value of given
 keyword
\end_layout

\end_inset

 
\series default
terms it may correspond to, along with its score giving a rough estimate
 of our confidence (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Matching-keywords"

\end_inset

).
\end_layout

\begin_layout Standard
Thirdly, the 
\emph on
entry points
\emph default
 are combined, evaluating different combinations of them (each such permutation
 of keyword 
\begin_inset Quotes eld
\end_inset

meanings
\begin_inset Quotes erd
\end_inset

 is called a 
\emph on
configuration
\emph default
, defining a tagging of input keywords in terms of schema terms or values)
 and ranked combining the scores of individual keywords based on a number
 of heuristics that boost the scores of 
\emph on
configurations
\emph default
 that 
\begin_inset Quotes eld
\end_inset

respect
\begin_inset Quotes erd
\end_inset

 the likely dependencies between the nearby keywords
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
the nearby keywords are expected to be related
\begin_inset CommandInset citation
LatexCommand citep
key "keymantic_kws_metadata_bergamaschi2011"

\end_inset

, e.g.
 a configuration is promoted if the tags of nearby keywords refer to the
 same entity
\end_layout

\end_inset

.
 The ranking is presented in the section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Ranking-function"

\end_inset

.
 During the same step, the configurations that are compatible with our data
 integration system (currently not all 
\begin_inset Quotes eld
\end_inset

possible
\begin_inset Quotes erd
\end_inset

 queries could be answered) are interpreted as structured queries, where
 we disambiguate schema terms as projections, filters, 
\color red
or simple operators [min, avg, unique etc]
\color inherit
 (this is also part of ranking).
\begin_inset Marginal
status open

\begin_layout Plain Layout

\series bold
\color red
operators not implemented yet, lower priority; 
\end_layout

\end_inset

.
 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\color magenta
 (for databases the join order is important; in our case (services): applying
 any operators and how services are combined)
\end_layout

\end_inset

.
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
 The queries could be further re-ranked by executing those of the best queries,
 that are estimated to be less heavy than some small threshold
\begin_inset Foot
status open

\begin_layout Plain Layout
this is not yet implemented; partially due to service performance issues,
 see our case study in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:cms-Performance-Issues"

\end_inset


\end_layout

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\series bold
\color blue
Example.

\series default
 Consider this query:
\color red
 
\family typewriter
\size footnotesize
\color inherit
avg dataset sizes Zmmg 
\begin_inset Quotes eld
\end_inset

number of events > 1000
\series bold

\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
Tokenizer would return these tokens: 
\family typewriter
avg; datasets; sizes; Zmmg; 
\begin_inset Quotes eld
\end_inset

number of events>1000
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
A number of interpretations would be generated for each keyword, these are
 a subset of them: 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{verbatim}
\end_layout

\begin_layout Plain Layout

Zmmg -> 0.7, value: dataset.name=*Zmmg* 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

datasets -> 0.9, schema: dataset
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Chunks:
\end_layout

\begin_layout Plain Layout

number of events>1000 -> 
\end_layout

\begin_layout Plain Layout

    1.0, filter: dataset.nevents>1000
\end_layout

\begin_layout Plain Layout

    0.8, filter: file.nevents>1000
\end_layout

\begin_layout Plain Layout

"datasets; sizes" -> projection: dataset.size 
\end_layout

\begin_layout Plain Layout

"avg; datasets; sizes" -> aggregation:avg(dataset.size)
\end_layout

\begin_layout Plain Layout


\backslash
end{verbatim}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\color magenta
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\color magenta
Because of limited access to the actual data, results of this method were
 reported considerably worse on queries containing data terms, even if all
 meta-data (e.g.
 business ontology) is given
\begin_inset CommandInset citation
LatexCommand citep
key "ethz2012"

\end_inset

, therefore it is helpful to have some insight on the data behind a web-service,
 but has limitations.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\series bold
\color red
TODO: finish the example; mention it actually requires combining two services
\end_layout

\begin_layout Standard
Below each the processing steps is described in more details.
\end_layout

\begin_layout Subsection
Tokenizer
\begin_inset CommandInset label
LatexCommand label
name "sub:Tokenizer"

\end_inset


\end_layout

\begin_layout Standard
The tokenizer do not try to parse the natural language, however attempts
 to cover as many of unambiguous cases as possible.
\end_layout

\begin_layout Standard
With the goal to simplify subsequent processing, first the keyword query
 is cleaned-up, standardizing its notation (e.g.
 removing extra spaces, normalizing date formats from YYYY-MM-DD into YYYYMMDD
 accepted by EII system, 
\color red
also recognizing some expressions in 
\color inherit
natural language, such as simple operators [X equals Y, X more than Y, etc]).
 This is accomplished using a number of regular expression replacement patterns.
 
\end_layout

\begin_layout Standard
Then, the keyword query is tokenized into tokens of:
\end_layout

\begin_layout Itemize
strings of "terms operator value" (e.g.
 
\family typewriter
nevent > 1, 
\begin_inset Quotes eld
\end_inset

number of events
\begin_inset Quotes erd
\end_inset

=100, 
\begin_inset Quotes eld
\end_inset

number of events>=100
\begin_inset Quotes erd
\end_inset


\family default
), if any
\end_layout

\begin_layout Itemize
phrases with compound query terms in brackets (e.g.

\family typewriter
 "number of events"
\family default
), if any
\end_layout

\begin_layout Itemize
individual query terms, otherwise
\end_layout

\begin_layout Standard
The second task is accomplished by splitting the input string on a regular-expre
ssion matching pattern which match the three cases above (n proper order),
 but exclude white-spaces outside of the brackets.
\end_layout

\begin_layout Subsection
String and entity matching
\begin_inset CommandInset label
LatexCommand label
name "sub:Matching-keywords"

\end_inset


\end_layout

\begin_layout Standard
The second step of query processing is identifying the starting points through
 applying the techniques below.
 To lower false positives, only the matches that score above some predefined
 cut-off threshold are included.
\end_layout

\begin_layout Paragraph*
Custom string similarity function
\end_layout

\begin_layout Standard
Our experience is that basic string-edit distance metrics such as the standard
 Levenshtein edit-distance (where inserts, edits, and mutations are equal)
 or 
\emph on
Jaro-Winker's
\begin_inset Marginal
status open

\begin_layout Plain Layout

\emph on
\color red
there was a paper on this
\end_layout

\end_inset


\emph default
 which are initially designed for general matching tasks (e.g.
 matching people names, correcting typing errors, etc), do not perform very
 well in the task of matching keywords into specific entity names, either
 introducing too many false-positives (e.g.
 'file' as 'site'), or not recognizing lexically farther word combinations
 that still make sense, such as 
\emph on
config
\emph default
 vs 
\emph on
configuration
\emph default
.
 
\end_layout

\begin_layout Standard
Therefore, to minimize the false positives (which have direct effect on
 ranking), we propose to use a combination of more trustful metrics in this
 order: full match, lemma match (e.g.
 only the word number differs), stem-match, stem match within a very small
 edit distance, see eq.
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:string_dist"

\end_inset

, where 
\begin_inset Formula $dist$
\end_inset

 is some string distance metric with limitations 
\color blue
(e.g.
 max 1-3 characters differing, max 1 mutation, beginning or end preferred,
 otherwise zero).
 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
similarity(A,B)=\begin{cases}
1, & if\, A=B\\
0.9, & if\, lemma(A)=lemma(B)\\
0.7, & if\, stem(A)=stem(B)\\
0.6\cdot dist(stem(A),stem(B)), & otherwise
\end{cases}\label{eq:string_dist}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
This improves the matching by incorporating basic linguistic knowledge,
 and do not require any domain-specific lexical resources
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
machine-learning based string similarity functions have shown improvements
 in the accuracy
\begin_inset CommandInset citation
LatexCommand citep
key "string_edit_crf_mccallum2012conditional"

\end_inset

, however they require domain-specific training data, that is often not
 available or costly to obtain, especially in the beginning of a project
 when no post logs can be used
\end_layout

\end_inset

 .
 Further, it is easy to implement as libraries exist for stemming, lemmatization
 (such as PorterStemmer and WordNetLemmatizer in the nltk).
\end_layout

\begin_layout Standard

\series bold
\begin_inset Marginal
status open

\begin_layout Plain Layout

\series bold
\color red
TODO: values within small edit distance
\end_layout

\begin_layout Plain Layout

\series bold
\color red
a paper has proposed: dynamic thresholds for Levenstein distance
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Itemize
String similarity (edit-distance)
\end_layout

\begin_deeper
\begin_layout Itemize
need to alter the weights...
\end_layout

\begin_deeper
\begin_layout Itemize
cheap removing from the end
\end_layout

\begin_layout Itemize
expensive mutations, removals from inside
\end_layout

\end_deeper
\begin_layout Itemize
matching the entity and attribute names
\end_layout

\begin_layout Itemize
values within small edit-distance (spelling-correction)
\end_layout

\begin_layout Itemize
also: learned edit-distances
\end_layout

\end_deeper
\begin_layout Itemize
Semantic distance
\end_layout

\begin_deeper
\begin_layout Itemize
could also match the possible values
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Subparagraph*
Regular expressions
\end_layout

\begin_layout Standard
As a regular expression (regexp) match do not guarantee a correct keyword
 interpretation (a regular expression could be too loose), so in general
 case, regexp matches are scored lower than in other matching methods.
 Still, some regular expressions are sufficiently restrictive (e.g.
 email), which we score higher.
\end_layout

\begin_layout Subparagraph*
Matching multi-word schema terms
\end_layout

\begin_layout Standard

\color red
\begin_inset Marginal
status open

\begin_layout Plain Layout

\color red
no fuzzy matching except stemming is currently used
\end_layout

\end_inset


\color inherit
 For simplicity, this is currently implemented using an IR library
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Even if Apache 
\emph on
Lucene
\emph default
 is assumed as the most mature of the open-source libraries, it requires
 Java and has large footprint.
 Even if that may impact the results slightly, we use 
\emph on
whoosh,
\emph default
 a python library which has no dependencies.
\end_layout

\end_inset

, where we store 
\begin_inset Quotes eld
\end_inset

documents
\begin_inset Quotes erd
\end_inset

 consists of multiple fields [physical term name, term title if any, and
 stemmed and tokenized versions of these] with different importance weights.
 
\end_layout

\begin_layout Standard
To find the matches, we query the IR library, for both 
\series bold
phrase and single term matches of up to the k-nearby keywords
\series default
 (we use maximum of 4), where phrase matches are assigned larger weight.
 After filtering out the worst results these will become the entry points
 for mapping keywords into the fields of data service outputs, currently
 we directly use the score returned by IR engine
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\color red
TF_IDF scoring is currently used.
 BM25F also available, however with default parameters it performed worse
 with unclean documents: multiple copies of same words in 
\begin_inset Quotes eld
\end_inset

fake
\begin_inset Quotes erd
\end_inset

 fields, some terms have ambiguous naming (titles), others have only 
\begin_inset Quotes eld
\end_inset

machine readable
\begin_inset Quotes erd
\end_inset

 field names
\end_layout

\end_inset

 manually normalized between [0..1].
 
\color blue
The scoring could be improved, but in our case it works already good.
\end_layout

\begin_layout Standard
The same could be also achieved through retrieving a list of matching fields
 for each keyword separately and then combining them through the scoring
 function, however the earlier approach allows pruning out the worst scoring
 token pairs and supporting the phrase search more easily.
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\color red
Matching keyword into an sample of values (guessing which is the best attribute
 without having all of its values)
\end_layout

\end_inset


\end_layout

\begin_layout Subparagraph*
Known values
\end_layout

\begin_layout Standard

\series bold
\color red
\begin_inset Marginal
status open

\begin_layout Plain Layout

\series bold
\color red
there are some specific cases with wildcard matches
\end_layout

\end_inset


\series default
\color inherit
 For some schema terms, we have a list of possible values, that we obtained
 bootstrapping them through respective data service interfaces.
 
\color blue
For matching we have a number of cases, with decreasing score
\color inherit
: full match, partial match, and matches of keywords with wildcards.
 If keyword's value matches a regular expression, but is not contained in
 the know values list and the accepted values of the given field are considered
 to be static (not changing often), we exclude this possibly false match
 allowing to reduce the false positives\SpecialChar \@.

\end_layout

\begin_layout Subparagraph*
Semantic similarity (not used)
\end_layout

\begin_layout Standard
A semantic matching based on freely available open-domain ontology such
 as the 
\emph on
WordNet
\emph default
, cannot work well in a very specific domain, out-of-the box.
 As the EII system at CMS currently has no linguistic ontology, we do not
 use the semantic similarity - if enabled, it just worsens the results by
 introducing false positives.
 
\color red
While for open-domain, large semantic knowledge bases such as 
\emph on
YAGO2
\emph default
 are quite good choices.
 
\end_layout

\begin_layout Subsection
Ranking function
\begin_inset CommandInset label
LatexCommand label
name "sub:Ranking-function"

\end_inset


\end_layout

\begin_layout Standard

\lang english
In addition to combining the 
\begin_inset Quotes eld
\end_inset

likelihood
\begin_inset Quotes erd
\end_inset

 scores of entry points (described in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Scoring-functions-used"

\end_inset

), a set of heuristics, 
\begin_inset Formula $H$
\end_inset

 is applied to boost the final scores:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
FloatBarrier
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Relationships between keywords:
\end_layout

\begin_deeper
\begin_layout Itemize
promoting such combinations where nearby keywords refer to related schema
 terms (e.g.
 entity name and it's value)
\end_layout

\begin_layout Itemize
we have to balance between taking most of the keyword and leaving out the
 ones that we are unsure about 
\begin_inset Marginal
status open

\begin_layout Plain Layout

\series bold
\color magenta
not in set H; Keymantic didn't do this?
\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\color blue
boost important keywords (different parts of speech are of different importance,
 e.g.
 stop-words are less useful than nouns, see Keyword Extraction, in Sec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Keyword-extraction"

\end_inset

)!
\begin_inset Marginal
status open

\begin_layout Plain Layout

\color blue
only stop-words are distinguished now; '(tell|show|display|find) me?' filtered
 out by tokenizer
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Qualities of Data Integration System:
\end_layout

\begin_deeper
\begin_layout Itemize
promote data service inputs over filters on their results: 1) it is more
 efficient, especially when this is possible; 2) there are much more of
 possible entities to filter, so more false matches are expected there,
 while the service inputs shall cover large part of cases
\end_layout

\begin_layout Itemize
if requested entity and a filter condition is the same (a small increase,
 a common use-case is retrieving an entity given it's 
\begin_inset Quotes eld
\end_inset

primary key
\begin_inset Quotes erd
\end_inset

 identifier or a wild-card)
\end_layout

\begin_layout Itemize
for being able to execute the query, the service constraints must be satisfied;
 still it could useful to the interpretations that achieve high rank, even
 if they do not satisfy some constraint (e.g.
 a mandatory filter is missing) informing the user
\begin_inset Marginal
status open

\begin_layout Plain Layout

\color blue
not yet implemented
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\color blue
\lang english
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\color blue
\lang english
entity near wildcard may mean what is being requested: what is the average
 size of 
\series bold
Zmm datesets
\series default
 where number of events is more than 1000
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*

\lang english
Scoring functions used
\begin_inset CommandInset label
LatexCommand label
name "sub:Scoring-functions-used"

\end_inset


\end_layout

\begin_layout Standard

\lang english
We experimented with two scoring functions, the first one basically averaging
 the scores (as it was used by Keymantic
\begin_inset CommandInset citation
LatexCommand citep
key "keymantic10"

\end_inset

), and the other of probabilistic nature - summing the log likelihoods.
 
\end_layout

\begin_layout Standard

\lang english
Averaging:
\end_layout

\begin_layout Standard

\lang english
\begin_inset Formula 
\begin{equation}
score\_avg(tags|KWQ)=\frac{{\displaystyle \sum_{i=1}^{|KWQ|}{\displaystyle \left(score(tag_{i}|kw_{i})+{\displaystyle \sum_{h_{j}\in H}h_{j}(tag_{i}|kw_{i};tag_{i-1,..,1})}\right)}}}{N\_non\_stopword}
\end{equation}

\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
resultype, etc?
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\lang english
Probabilistic:
\end_layout

\begin_layout Standard

\lang english
\begin_inset Formula 
\begin{equation}
score\_prob(tags|KWQ)=\sum_{i=1}^{|KWQ|}\left({\displaystyle {\displaystyle \ln}\left(score(tag_{i}|kw_{i})\right)}+\sum_{h_{j}\in H}h_{j}(tag_{i}|kw_{i};tag_{i-1,..,1})\right)
\end{equation}

\end_inset


\end_layout

\begin_layout Standard

\lang english
The two methods 
\series bold
\color red
seemed to perform equally well
\begin_inset Marginal
status open

\begin_layout Plain Layout

\series bold
\color red
\lang english
do we need better test data?
\end_layout

\end_inset


\series default
\color inherit
, with the probabilistic approach to be more sensitive to variations in
 scoring quality of the entry points (the scores are just estimates of our
 confidence, not real probabilities; the results improved with improvements
 to accuracy of string matching functions), however it seems the second
 approach is more exact in ranking the results when the entry point scores
 are quite exact.
 The final scores of the probabilistic approach are also more complex to
 interpret the result (if we have low score for an interpretation of a keyword
 it doesn't necessarily mean it is not a good match).
\end_layout

\begin_layout Subsection
Tuning the scoring parameters
\end_layout

\begin_layout Standard

\series bold
\color blue
TODO
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
packages, tool-kits: uncertainties, nltk, wordnet,mongodb
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsection
Natural Language Processing and full-sentence search
\end_layout

\begin_layout Standard
We first looked into parsing as this is a prerequisite for most other natural
 language processing methods such as Keyword extraction or Relation Extraction.
 However it didn't look worth the investment given our time constrains and
 our specific domain.
 
\end_layout

\begin_layout Standard
None of the existing out-of-the-box parsers we looked at 
\color red
(TODO:list)
\color inherit
, didn't show good results for our specific domain, especially then natural
 language is mixed with technical terms, numbers, and control statements.
 Still, Enju
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.nactem.ac.uk/enju/demo.html
\end_layout

\end_inset


\end_layout

\end_inset

, a wide-coverage 
\color red
probabilistic HPSG
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Head-driven phrase structure grammar
\end_layout

\end_inset


\color inherit
 rule-based parser, seemed the most robust for our specific domain, even
 without any additional training, giving much better results than the standard
 packages available in 
\color red
NLTK.
 As the 
\color inherit
project scope was
\color cyan
 limited, we didn't want additional dependences on third-party code, and
 natural language is still complex to interpret well
\color inherit
, this was excluded.

\color red
 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\color red
Word-Sense-Disambiguation could be still potentially useful, however as
 it we focused on closed domain, and do not directly interpret full-sentence
 queries, this is secondary importance.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Performance
\end_layout

\begin_layout Standard
A number of methods are available for improving the performance (e.g.
 Munkres/Hungarian bipartite matching algorithm, or dynamic programming
 with assumption of maximum length of dependences) 
\color red
[most probably]
\color inherit
 in exchange for additional assumptions.
 
\end_layout

\begin_layout Standard
Actually, at the CMS collaboration, implementing additional optimizations
 is not of highest priority: queries with the length of up to 
\series bold
n=8
\series default
 keywords runs faster than in a second, while for most of the queries the
 EII system requires tens of seconds to minutes to retrieve the actual query
 results from the data services 
\begin_inset Note Note
status open

\begin_layout Plain Layout
(This could be further optimized if part of the input is structured)
\end_layout

\end_inset

.
 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
, and the quality of results is important in the beginning of the project
 (the new users are tempted to like or to dislike something from the beginning
 it, without willing to try it again later).
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Section
User interface
\end_layout

\begin_layout Subsection
Presenting the results
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
[PUT IMAGE]
\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
keyword search results
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Advanced auto-completion (prototype)
\begin_inset Marginal
status open

\begin_layout Plain Layout

\series bold
\color red
here or separate chapter?
\end_layout

\end_inset


\end_layout

\begin_layout Standard
While structured queries are hard to compose, keyword and natural language
 queries are complex for a machine to interpret because of their ambiguity
 or inherent complexity.
 Form-based interfaces has been around since many years, however with many
 structural items being candidates for the input, they are not very practical,
 while static predefined forms are limiting the user's expressiveness even
 more.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
For instance, at CERN, the DAS system has seen many different interfaces
 to date, but none of them git well established/naturalized.
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\series bold
We are argue that a simple user-interface
\series default
\color red
 
\color inherit
could combine the advantages of both: properly-implemented variation of
 forms (which for instance could be implemented as an input widget accepting
 multiple tokens and providing suggestions and disambiguations in real time,
 see fig.
 
\series bold
XYZ
\series default
), being a structured input, could reduce the ambiguity of the queries to
 a minimum extent; while the availability of keyword search leaves freedom
 for expressiveness.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename figures/ui.png
	width 60text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
prototype of auto-completion based interface
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\color red
Further, such user interface would allow getting immediate user's feedback
 resulting in: a) well-defined input to the system, that in turn results
 in more exact query suggestions, b) could potentially used for evaluating
 and improving the quality of entity matching and keyword search.
 We will elaborate on this is the chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Incorporating-User-Feedback"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\series bold
We believe that in many cases supporting a combination of these approaches
 is a good compromise: 
\series default
the input (or subset of it) that is not conforming to the rules of given
 structured language, could be processed as natural language if it conforms
 to its grammar or as a keyword query otherwise.
\end_layout

\end_inset


\end_layout

\begin_layout Chapter

\color red
Incorporating User Feedback
\color inherit
: Sketch
\begin_inset CommandInset label
LatexCommand label
name "chap:Incorporating-User-Feedback"

\end_inset


\end_layout

\begin_layout Itemize
influence keyword to schema term matching
\end_layout

\begin_deeper
\begin_layout Itemize
similarity metrics and their weights
\end_layout

\begin_layout Itemize
allow users to add new: [this is the explicit feedback, that is more valuable
 than implicit]
\end_layout

\begin_deeper
\begin_layout Itemize
values for schema entities
\end_layout

\begin_layout Itemize
synonyms for schema terms
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
weights on particular entities or notes in schema graph: SODA 
\begin_inset CommandInset citation
LatexCommand citep
key "soda_feedback"

\end_inset


\end_layout

\begin_layout Itemize
promote/demote query suggestions - machine learning
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Section
Personalizing the results
\end_layout

\begin_layout Plain Layout
First the most common queries may be promoted in the results, maximizing
 the probability of getting results right.
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout

\color red
shall we distinguish links generated by DAS, e.g.
 for dataset: config, files, etc?
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
Information need among different user roles (department, function) differs
 a lot.
 At least at the CMS Experiment, CERN, users are often interested only in
 a few types of queries or entities that they are interacting with the most.
 
\end_layout

\begin_layout Plain Layout
Prioritization may promote queries related to what the user (or his group?)
 has previously used.
\end_layout

\begin_layout Section
Machine Learning approaches
\end_layout

\begin_layout Plain Layout
\begin_inset Wrap figure
lines 0
placement r
overhang 1cm
width "40col%"
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
vspace{-60pt}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename 1000px-HMMsequence.svg.png
	lyxscale 30
	width 40text%

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
vspace{-10pt}
\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
HMM consituents
\end_layout

\end_inset


\end_layout

\end_inset

 
\end_layout

\begin_layout Plain Layout
Bergamaschi et al.
 approached the earlier problem through Hidden Markov Model (HMM
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "HMM"
description "Hidden Markov Model"

\end_inset

) that allow taking into account the query logs.
 Keywords that are near to each other are expected to represent interrelated
 concepts, which motivates the application of an HMM as it can efficiently
 model such kind of interdependences
\begin_inset CommandInset citation
LatexCommand citep
key "semantics_without_access"

\end_inset

.
 Their approach was initially designed for Relational Databases (then access
 to the instance is limited), but it could be also adapted for data integration
 over data services.
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Case study: Data Integration at the CMS Experiment, CERN
\begin_inset CommandInset label
LatexCommand label
name "chap:Case-study:CMS"

\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout

\color red
to put this before or after KWS in detais? a problem description in details
 could be good
\end_layout

\end_inset


\begin_inset CommandInset include
LatexCommand input
preview true
filename "sub_chapters/cms_case.tex"

\end_inset


\end_layout

\begin_layout Subsubsection*
Data-Source qualities, Infrastructure
\end_layout

\begin_layout Itemize

\color red
amount of data; description of services; constraints
\end_layout

\begin_layout Subsubsection*
Issues
\end_layout

\begin_layout Itemize

\color red
performance
\end_layout

\begin_layout Itemize

\color red
the fields that are contained in the results of retrieving some entity depend
 on the filtering conditions (sometimes it contains all the fields, sometimes
 only the 
\begin_inset Quotes eld
\end_inset

primary key
\begin_inset Quotes erd
\end_inset

 allowing to identify the entity).
 This is creating additional confusion for the users, as it is not easy
 to figure out where and how to find what the user is searching for.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Subsection
Alternative architectures
\end_layout

\begin_layout Plain Layout
Publish/subscribe
\end_layout

\end_inset


\end_layout

\begin_layout Section
Discussion of Performance Issues
\begin_inset CommandInset label
LatexCommand label
name "sub:cms-Performance-Issues"

\end_inset


\end_layout

\begin_layout Standard
After analysis of query logs and benchmarking the most popular queries,
 it was found out that most performance issues were due to large data amounts
 the data providers are processing, and some of the unnecessarily work being
 repeated or requested without need.
\end_layout

\begin_layout Standard
The most of data-sources at CMS were initially created focusing on data
 taking (for recording the measurements from the CMS particle detector),
 without thinking much about information retrieval.
 As a result, the services are not optimized for querying the fairly large
 data volumes stored: data is stored in fully-relational fashion where querying
 requires complex joins; the APIs of most services do not allow limiting
 the number of results to be returned, nor sorting.
 
\end_layout

\begin_layout Subsection*
Incremental view maintenance
\end_layout

\begin_layout Standard
In the cases when new records are coming but the existing ones are not changing
 much
\series bold
, 
\series default
the incremental view maintenance that computes only differences from earlier
 results could be a fairly easy solution for improving the performance of
 (popular) queries containing heavy joins and/or aggregations.
 
\end_layout

\begin_layout Standard
This is exactly the case for the most popular expensive query
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
\begin_inset Foot
status open

\begin_layout Plain Layout
see query #7 in DAS Query log analysis
\series bold

\begin_inset CommandInset ref
LatexCommand vpageref
reference "appendix_das_cli_logs"

\end_inset


\end_layout

\end_inset

 
\end_layout

\end_inset

 over the DBS system (80GB of data + 280GB of indexes): 
\emph on
’find files where run in [r1, r2, r3] and dataset=X’
\emph default
 that requires joining all the biggest tables in that database.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

{
\backslash
small
\backslash
verb|Dataset (164K rows) -> Block (2M) -> Files (31M) -> FileRunLumi (902M)
 <- Runs (65K)|}
\end_layout

\end_inset

 
\begin_inset Marginal
status open

\begin_layout Plain Layout

\color red
diagram instead?
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Having a materialized view with all these tables joined together would allow
 answering such queries much quicker.
 Given low change rates (in comparison to data already present), maintaining
 the view should be also comparatively cheap with the only expense of just
 couple of times of storage space (storage is bound by the size of the largest
 table anyway).
 
\end_layout

\begin_layout Standard
In Oracle, the 
\emph on
materialized refresh fast views with query rewriting
\emph default
 would be completely transparent and would not need any changes to proprietary
 systems, but it has a couple of limitations on the queries
\begin_inset CommandInset citation
LatexCommand citep
key "Oracle11"

\end_inset

.
 Alternatively, some other continuous view maintenance tool (e.g.
 DBToaster
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
http://www.dbtoaster.org that is being developed at EPFL 
\end_layout

\end_inset

) could be used, however this would not be as transparent as the earlier
 solution.
 
\end_layout

\begin_layout Subsection*
Pagination and Sorting of results
\end_layout

\begin_layout Standard
As many of the queries on the web interface are exploratory and request
 only the first page of results, supporting pagination is one of the major
 factors towards performance improvements (and perception of performance
 by the users).
 As the DAS system is combining records from multiple systems, pagination
 also requires some ordering that is common among the services (in most
 cases that could be the 
\begin_inset Quotes eld
\end_inset

Primary key
\begin_inset Quotes erd
\end_inset

 of the entity that is being queried).
\end_layout

\begin_layout Standard

\series bold
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\series bold
Integrating distributed information efficiently
\end_layout

\begin_layout Plain Layout
Bloom-join (which could be quite transparent and implemented even on DB
 side (efficient pure SQL is doable for MySQL, and probably for Oracle too)
 quite transparently (a helper function could take the initial query and
 bloom-filter’s bit-vector as parameters).
 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Estimating query running time
\begin_inset CommandInset label
LatexCommand label
name "sub:Estimating-query-running"

\end_inset


\begin_inset Marginal
status collapsed

\begin_layout Plain Layout

\color red
not yet implemented
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Tracking of the execution time of each data-service, 
\color red
was proposed to be implemented
\color inherit
, that allows a) informing user of long lasting queries, and running them
 only with his confirmation b) pre-running the speedy queries even before
 user has explicitly selected them (e.g.
 the top few queries proposed).
\end_layout

\begin_layout Standard
It has been chosen to track the mean of execution time, and its standard
 deviation.
 Knuth has shown that the standard deviation can be efficiently computed
 in an online fashion without need to store each individual value, nor recomputi
ng everything from scratch 
\begin_inset CommandInset citation
LatexCommand citep
after "p. 232"
key "knuth1998stdev"

\end_inset

.
 
\end_layout

\begin_layout Standard
Because input parameters passed to the service may heavily impact the service
 performance, we differentiate between these parameter types: 1) some specific
 value, 2) a value with wild-card (presumably returning more results than
 specific value as it may match multiple values), 3) not provided (matches
 all values).
 So we store only four values per data-service input parameter's combination.
\end_layout

\begin_layout Standard

\series bold
\color magenta
Prioritizing the queries
\end_layout

\begin_layout Subsection
Improving the Search Interface and Relaxation of the Query Language
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout

\color red
shall we put the solutions here or somewhere lower in the paper after describing
 Keyword Search?
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\color red
implementation of simple compound queries so that an entity could always
 return same list of fields, easy to implement and very useful for users
\end_layout

\begin_layout Itemize

\color red
makes the system much more clear
\end_layout

\begin_layout Itemize

\color red
that even makes keyword searching easier to implement, as we could assume
 that all the fields are almost 
\begin_inset Quotes eld
\end_inset

stable
\begin_inset Quotes erd
\end_inset

 for each entity being returned (except a couple of exceptional cases, which
 could be check afterwards)
\end_layout

\begin_layout Chapter
Evaluation
\begin_inset CommandInset label
LatexCommand label
name "chap:Evaluation"

\end_inset


\end_layout

\begin_layout Section
Accuracy
\end_layout

\begin_layout Standard

\series bold
success @ K-th result
\end_layout

\begin_layout Standard
1
\end_layout

\begin_layout Standard
3
\end_layout

\begin_layout Standard
5
\end_layout

\begin_layout Standard
10
\end_layout

\begin_layout Standard
20
\end_layout

\begin_layout Standard
-
\end_layout

\begin_layout Standard

\series bold
query types:
\end_layout

\begin_layout Standard
value: known, regexp
\end_layout

\begin_layout Standard
entity + known val
\end_layout

\begin_layout Standard
entity + unknown value
\end_layout

\begin_layout Standard
multiple entities values
\end_layout

\begin_layout Standard
result attribute filter
\end_layout

\begin_layout Standard
(meaningless -- false match)
\end_layout

\begin_layout Standard

\series bold
\color red
aggregator / sorting??
\end_layout

\begin_layout Subsection*
String matching
\end_layout

\begin_layout Section
Users feedback
\end_layout

\begin_layout Standard
Usability
\end_layout

\begin_layout Standard
Usefulness of KWS vs structured query language
\end_layout

\begin_layout Chapter
Conclusions and Future work
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Section
Other applications?
\end_layout

\begin_layout Section
Conclusion
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\color magenta
Keyword search over data services is still lacking attention from research
 community.
\end_layout

\begin_layout Standard

\color magenta
In addition to structured query languages, this could help in learning and
 getting results more quickly.
\end_layout

\begin_layout Standard
We presented ...
\end_layout

\begin_layout Standard
Future work...
\end_layout

\begin_layout Standard

\color cyan
----
\end_layout

\begin_layout Standard

\series bold
\color cyan
Future work (technical notes):
\end_layout

\begin_layout Itemize

\color cyan
Client-side implementation of keyword search - large parts of keyword search
 could be moved to client-side, saving the server resources.
 A couple of issues exist: making sure that the load is not to high and
 synchronizing the logs.
 The first one could be solved by using so called worker threads.
 http://www.w3.org/TR/workers/ http://www.sitepoint.com/javascript-execution-browser
-limits/
\end_layout

\begin_layout Standard

\color cyan
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\color red
Do not try to gain complete understanding (concept of so successful Watson).
\end_layout

\begin_layout Subsection
Identifying full sentences
\end_layout

\begin_layout Plain Layout
A keyword query that is not a well-formed sentence, e.g.
 
\begin_inset Quotes eld
\end_inset

file dataset Zmm
\begin_inset Quotes erd
\end_inset

 parsed by Standford parser gives 
\begin_inset Quotes eld
\end_inset

file/VB dataset/JJ Zmm/NN
\begin_inset Quotes erd
\end_inset

, where dataset/JJ is a wrong tag.
 Applying the keyword extraction would down-rank this term without any good
 reason.
\end_layout

\begin_layout Plain Layout
Simple approach could be checking if sentence starts with a Wh-word (what,
 where, when).
\end_layout

\begin_layout Subsection
Keyword extraction
\begin_inset CommandInset label
LatexCommand label
name "sub:Keyword-extraction"

\end_inset


\end_layout

\begin_layout Plain Layout

\color red
the words extracted as 
\begin_inset Quotes eld
\end_inset

keywords
\begin_inset Quotes erd
\end_inset

 would be given higher score than others, different scores for different
 POS.
\end_layout

\begin_layout Plain Layout

\series bold
See NLP class, slides on keyword extraction.
\end_layout

\begin_layout Plain Layout

\series bold
\bar under
\color magenta
TODO: WE HAVE TO Evaluate each sub-approach!!!
\end_layout

\begin_layout Subsection
Answer Type
\end_layout

\begin_layout Itemize
Answer Type Detection - figuring out the requested Answer type
\end_layout

\begin_deeper
\begin_layout Itemize
take question headword: first NP after wh-word that is not pronoun (e.g.
 tell me what is [biggest dataset])
\end_layout

\begin_deeper
\begin_layout Itemize
simple directly answerable by Services: where are files of Zmm located?
\end_layout

\begin_layout Itemize
complex, needs filtering: what is the total size of datasets that ....
\end_layout

\end_deeper
\begin_layout Itemize
patterns to interpret wh-words
\end_layout

\begin_deeper
\begin_layout Itemize
when --> date e.g.
 (created|modified...
 etc)
\end_layout

\begin_layout Itemize
where --> location
\end_layout

\begin_layout Itemize
how many, big/large
\end_layout

\end_deeper
\end_deeper
\begin_layout Subsection
Relation extraction and Deep Parsing + Predicate Argument Structure (but
 probably no time for this)
\end_layout

\begin_layout Plain Layout
interesting demo: http://www.nactem.ac.uk/enju/demo.html
\end_layout

\begin_layout Plain Layout
biomedical paper works not so bad.
\end_layout

\begin_layout Plain Layout

\bar under
\color magenta
----
\end_layout

\begin_layout Plain Layout

\bar under
\color magenta
semantic distance, string dist WSD (word sense d..,) focus extraction (1 NP
 or last NP) 
\end_layout

\begin_layout Plain Layout

\bar under
\color magenta
E.g.
 what is the Total size of all Zmm datasets 
\end_layout

\begin_layout Plain Layout

\bar under
\color magenta
what is the size of /Zmm/.,X datasets --- parsing of the query file Zmm 
\end_layout

\begin_layout Plain Layout

\bar under
\color magenta
figuring out between KWS and NL search
\end_layout

\begin_layout Subsection
Parsing Control Statements
\end_layout

\begin_layout Plain Layout
there are quite a many ways of expressing operations (such as ordering,
 min, max, etc), and often these may look ambiguous, for instance a query
 
\begin_inset Quotes eld
\end_inset


\bar under
smallest file
\bar default
 in Zmmg with 100 or more events
\begin_inset Quotes erd
\end_inset

 is asking for 
\series bold
the smallest file
\series default
 (order by file size), but 
\series bold
not
\series default
 what is smallest file size (that would be min(file.size)).
\end_layout

\begin_layout Plain Layout
Answer type resolving could help a little (answer type: NP: 
\begin_inset Quotes eld
\end_inset

Adj: smallest N:file
\begin_inset Quotes erd
\end_inset

), but we are still left in a quite complex situation.
\end_layout

\begin_layout Plain Layout
Templates / Regexps
\end_layout

\begin_layout Plain Layout
Predicate Argument Structure + Relation Extraction Rules(proLog) -- however
 too expensive given time constraints...
\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\color cyan
web sockets for auto-completion
\end_layout

\begin_layout Standard

\color red
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Because of the project was fairly short and the author had to follow some
 of priorities of the CMS Experiment, some parts of the research work had
 to be excluded, including: 
\series bold
\color red
TODO
\series default
.
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "refs"
options "bibtotoc,alpha"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Chapter*
\start_of_appendix
Appendices
\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset include
LatexCommand input
preview true
filename "sub_chapters/das_logs.tex"

\end_inset


\end_layout

\begin_layout Plain Layout

\series bold
Appendix: Kinds of Queries at CMS
\end_layout

\begin_layout Plain Layout
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Appendix: Proposed solutions for CMS?
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Note Note
status collapsed

\begin_layout Itemize
Showing results in natural language too!!!
\end_layout

\begin_layout Itemize
Faceted navigation and/or Refinement of User's Intent?!
\end_layout

\begin_layout Itemize
Real-time suggestions
\end_layout

\begin_layout Itemize
also Keyword Search combining services? 
\end_layout

\begin_layout Itemize
try loading the results online (but they count be different)
\end_layout

\begin_layout Itemize
understanding relationships between services (e.g.
 through existing queries?) 
\end_layout

\begin_layout Itemize
evaluation of degradation of ranking quality with expansion of search space
 (operators: aggression, min, max, post-filtering through result fields)
\end_layout

\begin_layout Itemize
Limitations of the approach: control statements? controlled statements:
 top 10, rank by, aggregate by etc
\end_layout

\begin_layout Itemize
Examples in our domain? in different domain? Evaluation/usability study
 by end-users
\end_layout

\begin_layout Itemize
\begin_inset Note Note
status collapsed

\begin_layout Itemize
interaction with the user e.g.
 creation time/ modification time dataset taken on 1/Jan/2013 dataset -
 F size, type, I n_events decrease false positives via machine learning?
 
\end_layout

\begin_layout Itemize
e.g., dateset with more than 100 event avg, sum 
\end_layout

\end_inset

 CRF implementations that can output n-best results
\end_layout

\begin_deeper
\begin_layout Itemize
http://crfpp.googlecode.com/svn/trunk/doc/index.html
\end_layout

\begin_layout Itemize
http://wapiti.limsi.fr/ 
\end_layout

\begin_layout Itemize
mallet is Java library (not prefferd because of Java)
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
\color red
\lang english
TO Check: Natural Language Querying over Databases Using Cascaded CRFs
\end_layout

\begin_layout Itemize

\lang english
Training Conditional Random Fields using Virtual Evidence Boosting 
\end_layout

\begin_deeper
\begin_layout Itemize

\lang english
http://www.ijcai.org/Past%20Proceedings/IJCAI-2007/PDF/IJCAI07-407.pdf
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
About converting HMM into CRF:
\end_layout

\begin_deeper
\begin_layout Itemize
http://www.cs.ucf.edu/~gitars/cap6938/vail07conditional.pdf
\end_layout

\begin_layout Itemize

\series bold
http://knight.cis.temple.edu/~yates/cis8538/sp11/slides/conditional-random-fields.pp
t
\end_layout

\begin_deeper
\begin_layout Itemize
http://knight.cis.temple.edu/~yates/cis8538/sp11/
\end_layout

\end_deeper
\begin_layout Itemize
CRF survey:
\end_layout

\begin_deeper
\begin_layout Itemize
http://blog.echen.me/2012/01/03/introduction-to-conditional-random-fields/
\end_layout

\begin_layout Itemize
http://onionesquereality.wordpress.com/2011/08/20/conditional-random-fields-a-begi
nners-survey/
\end_layout

\begin_layout Itemize
http://stackoverflow.com/questions/80089/anyone-recommend-a-good-tutorial-on-cond
itional-random-fields
\end_layout

\end_deeper
\begin_layout Itemize
in python:
\end_layout

\begin_deeper
\begin_layout Itemize
http://github.com/shuyo/iir/blob/master/sequence/crf.py
\end_layout

\begin_layout Itemize
http://blog.echen.me/2012/01/03/introduction-to-conditional-random-fields/
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
lingPIpe?
\end_layout

\begin_deeper
\begin_layout Itemize
also supports CRF: http://alias-i.com/lingpipe/demos/tutorial/crf/read-me.html
\end_layout

\end_deeper
\begin_layout Itemize
Problems with complex queries:
\end_layout

\begin_deeper
\begin_layout Itemize
give me sizes for RAW, RECO, AOD for /SingleMu/Run2012B-PromptReco-v1/RECO
 dataset and run 195529
\end_layout

\end_deeper
\begin_layout Plain Layout

\lang english
Another thing which could useful for the users at CMS Experiment, CERN,
 is search system that allows a) combing keyword-based and structured search
 (even in the same query), and that b) do not require the queries to be
 in a format that depends on physical service implementation (inputs vs
 outputs), while the current 
\emph on
DAS Query Language
\emph default
 does.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
