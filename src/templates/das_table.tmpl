#from DAS.web.utils import quote
#set base=$quote($base)
#set tag=$quote($tag)
#assert isinstance($total, int)
#assert isinstance($rowsperpage, int)
#assert isinstance($input, str)
<!-- The input is encoded in a das_web.py code, coldefs/titles are quoted in a code  -->

<!-- das_table.tmpl -->
#if $total

<!--begin custom header content for this example-->
<div class="yui-skin-sam">

Found $total results
<div id="$tag"></div>

<script type="text/javascript">
//<![CDATA[
YAHOO.example.DynamicData = function() {
    // Column definitions
    var myColumnDefs = ${coldefs};

    // DataSource instance
    var myDataSource = new YAHOO.util.DataSource("table_records?");
    myDataSource.responseType = YAHOO.util.DataSource.TYPE_JSON;
    myDataSource.responseSchema = {
        resultsList: "records",
        fields: [
#for key in $titlelist
#if $key != $titlelist[-1]
        {key: "$key"},
#else
        {key: "$key"}
#end if
#end for
        ],
        metaFields: {
            totalRecords: "totalRecords" // Access to value in the server response
        }
    };
    // Overwrite default generateRequest to adjust for parameters used in DAS.
    // Example taken from datatable.js default implementation
    var myRequestBuilder = function(oState, oSelf) {
        // Get states or use defaults
        oState = oState || { pagination: null, sortedBy: null };
        var sort = (oState.sortedBy) ? oState.sortedBy.key : oSelf.getColumnSet().keys[0].getKey();
        var dir = (oState.sortedBy && oState.sortedBy.dir === YAHOO.widget.DataTable.CLASS_DESC) ? "desc" : "asc";
        var idx = (oState.pagination) ? oState.pagination.recordOffset : 0;
        // parameters used in DAS
        var dasparams = "$input&limit=$rowsperpage&idx=" + idx;
        // Build the request
        return dasparams;
    };
    // DataTable configuration
    var myConfigs = {
        initialRequest: "$input&idx=0&limit=$rowsperpage", // Initial request for first page of data
        dynamicData: true, // Enables dynamic server-driven data
        sortedBy : {key:"$titlelist[0]", dir:YAHOO.widget.DataTable.CLASS_ASC}, // Sets UI initial sort arrow
        generateRequest: myRequestBuilder,
        paginator: new YAHOO.widget.Paginator({ rowsPerPage:$rowsperpage}) // Enables pagination 
    };
    // DataTable instance
    var myDataTable = new YAHOO.widget.DataTable("$tag", myColumnDefs, myDataSource, myConfigs);

    // Update totalRecords on the fly with value from server
    myDataTable.handleDataReturnPayload = function(oRequest, oResponse, oPayload) {
        oPayload.totalRecords = oResponse.meta.totalRecords;
        return oPayload;
    }
    
    return {
        ds: myDataSource,
        dt: myDataTable
    };
}();
//]]>
</script>


</div> <!-- class="yui-skin-sam" -->
<br />

#end if
<!-- end of das_table.tmpl -->

