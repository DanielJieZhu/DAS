#from DAS.web.utils import quote

<!-- das_ambiguous.tmpl -->
<div> <!-- main div -->

    <style type="text/css">
        .ui-autocomplete {
            /*width:  500px;*/
            font-size: 0.8em!important;
        }
    </style>
    <link rel="stylesheet" href="/das/css/?f=jquery-ui.css" />
    <script type="text/javascript" src="/das/js/?f=visualsearch-dependencies.min.js"></script>
    <!--
    <script src="http://documentcloud.github.com/visualsearch/build-min/dependencies.js"
            type="text/javascript"></script> -->

    <script type="text/javascript">
        jQuery.noConflict();
    </script>
    <!--
    <script src="http://documentcloud.github.com/visualsearch/build-min/visualsearch.js"
            type="text/javascript"></script>-->
    <script type="text/javascript" src="/das/js/?f=visualsearch.min.js&f=autocomplete_kws.js"></script>

    <!--[if lte IE 7]><!-->
    <link href="/das/css/?f=visualsearch.css"
          media="screen" rel="stylesheet" type="text/css"/>
    <!--<![endif]-->
    <!--[if (!IE)|(gte IE 8)]><!-->
    <link href="/das/css/?f=visualsearch-datauri.css"
          media="screen" rel="stylesheet" type="text/css"/>
    <!-- TODO: copy img files -->
    <!--<![endif]-->


    <div id="autocomplete-container" style="position:absolute; width: 500px;"></div>
    <b>Describe what you are searching for</b>
    <div id="result_entities" class="visual_search_result"></div>

    <b>Describe what do you know about the data (i.e. how to filter it out)</b>
    <div id="filters" class="visual_search_filters"></div>

    <div id="#filters_summary"></div>


    <script type="text/javascript" charset="utf-8">
        var _DEBUG = true;
        jQuery(document).ready(function () {
            var visualSearch = VS.init({
                container: jQuery('.visual_search_filters'),
                query: '',
                showFacets : true,
                unquotable : [
                ],
                callbacks  : {
                    search : function(query, searchCollection) {
                        var query = jQuery('#search_query');
                        query.stop().animate({opacity : 1}, {duration: 300, queue: false});
                        query.html('<span class="raquo">&raquo;</span> You searched for: <b>' + searchCollection.serialize() + '</b>');
                        clearTimeout(window.queryHideDelay);
                        window.queryHideDelay = setTimeout(function() {
                            query.animate({
                                opacity : 0
                            }, {
                                duration: 1000,
                                queue: false
                            });
                        }, 2000);
                    },
                    // These are the facets that will be autocompleted in an empty input.
                    facetMatches: function (callback) {
                        callback($sdaskeys,
                                // preserves order of terms/facets
                                // (so far this exclude free keywords)
                                { preserveOrder: true,
                                  allowInfix: true });
                        if (_DEBUG) console.log('facet matches:', this, callback);
                    },

                    // These are the values that match specific categories, autocompleted
                    // in a category's input field.  searchTerm can be used to filter the
                    // list on the server-side, prior to providing a list to the widget.
                    valueMatches: function (facet, searchTerm, callback) {
                        // static values
                        $selkeys_values

                        switch (facet){
                            case 'dataset':
                                jQuery.getJSON(
                                        '/das/autocomplete',
                                        // 'dataset=' +
                                        { query:  searchTerm },
                                        function(data){
                                            if (_DEBUG) console.log(data);
                                            matches = jQuery.map(data, function(item, i){
                                                if (item.info == 'dataset'){
                                                    return item.value.replace('dataset=', '')
                                                }
                                                return null;
                                            });

                                            //jQuery.each(data.items, function(i,item){
                                            //}
                                            callback(matches, {
                                                allowInfix: true,
                                                doNotFilter: true // to allow wildcard!
                                            });
                                        })
                                        .error(function(){
                                                callback([])
                                            }
                                        );


                                break;
                            default:
                                if (_DEBUG) console.log('other facet:', facet, searchTerm, callback);
                        }

                    }
                }
            });
        });
    </script>





    <b>Kws tests</b><br/>


</div> <!-- end of main div -->
<!-- end of das_ambiguous_html.tmpl -->

