#from DAS.web.utils import quote

<!-- code mirror version -->
<!-- das_ambiguous.tmpl -->
<div> <!-- main div -->

<style type="text/css">
    .ui-autocomplete {
        /*width:  500px;*/
        font-size: 0.8em !important;
    }
</style>


<style type=text/css>
    div.CodeMirror {
        border: 1px solid #999 !important;
        height: 50px !important;
    }
</style>

<!-- f=jquery-ui.css&f=jquery.tagit.css&f=kwsearch.css& -->
<link rel="stylesheet"
      href="/das/css/?f=codemirror.css&f=show-context-info.css&f=show-hint-eclipse.css&f=templates-hint.css&f=show-hint-eclipse.css&f=templates-hint.css"/>
<script type="text/javascript"
        src="/das/js/?f=codemirror.js&f=das-parser.js&f=show-hint.js&f=das-hint.js&f=show-context-info.js&f=templates-hint.js&f=das-templates.js"></script>


<!--

    <b style="color: #666">Describe what do you know about the data (i.e. how to filter it out)</b><br />
    -->


<div id="search_query"></div>

<div id="results-async"></div>


<form action="/das/request" method="get" name="das_search" id="das_search"
      style="border: 0"
      class="das_form">
    <table>
        <tr>
            <td class="right">
                data in
                <select id="view" name="view">
                    <option class="sand" value="list">list</option>
                    <option class="sand" value="plain">plain</option>
                    <option class="sand" value="table">table</option>
                    <option class="sand" value="json">json</option>
                    <option class="sand" value="xml">xml</option>
                </select>
                format,
            </td>
            <td class="left">
                &nbsp;
                <select id="limit" name="limit">
                    <option class="sand" value="10">10</option>
                    <option class="sand" value="25">25</option>
                    <option class="sand" value="50">50</option>
                    <option class="sand" value="100">100</option>
                </select>
                results/page,
            </td>
            <td class="right">
                &nbsp;
                dbs instance
                <select id="instance" name="instance">
                    <option class="sand" value="cms_dbs_prod_global">
                        cms_dbs_prod_global
                    </option>
                    <option class="sand" value="cms_dbs_caf_analysis_01">
                        cms_dbs_caf_analysis_01
                    </option>
                    <option class="sand" value="cms_dbs_ph_analysis_01">
                        cms_dbs_ph_analysis_01
                    </option>
                    <option class="sand" value="cms_dbs_ph_analysis_02">
                        cms_dbs_ph_analysis_02
                    </option>
                </select>
                ,
            </td>

            <td class="right">
                &nbsp;
                <input type="submit" value="Search" class="btn borders"/>
                <input type="button" class="btn borders"
                       onclick="javascript:ac_init();clear_input()"
                       value="Reset"/>
            </td>
        </tr>
    </table>
    <div class="autocomplete">
        <!-- <input type="text" name="input" id="input" style="width:100%;"/> -->


<textarea id="code" name="input">
file,run,lumi dataset=/Zmm/*/* run in [1, 2, 3] | grep dataset.nevents>1, file.adler32=3, file.replica.site=CERN_CH, min(file.size)
        </textarea>
<!--
<input type="submit" value="Search" id="submit"
       style="float:right; font-weight: bold;" class="ui-button"/> -->


        <div id="ac_container"></div>
    </div>
<span>
<a href="javascript:FlipTag('das_keys_desc');"><b>Show DAS keys description</b></a>
</span>
</form>
<div class="right">
    <img src="/das/images/mongodb_logo.png" alt="Powered by MongoDB"
         width="5%"/>
</div>


<div id="filters" class="visual_search_filters"></div>

<br/>


<p>Press <strong>ctrl-space</strong> or <strong>Tab</strong> to activate
    autocompletion.
    <script type="text/javascript">
        CodeMirror.commands.autocomplete = function (cm) {
            var opts = {
                completeSingle: false,
                closeOnUnfocus: false,
                async: true,
                closeCharacters: /[\s()><=,]/  // default was: /[\s()\[\]{};:>,]/;
            };
            CodeMirror.showHint(cm, CodeMirror.dasHint, opts);
        };


        function passAndHint(cm) {
            setTimeout(function () {
                cm.execCommand("autocomplete");
            }, 100);
            return CodeMirror.Pass;
        }

        function submitQuery(cm){
            setTimeout(function () {
                document.getElementById('das_search').submit();
            }, 100);
            //return CodeMirror.Pass;
        }

        // TODO: integrate showContextInfo
        //CodeMirror.commands.autocomplete = function(cm) {
        //  CodeMirror.showHint(cm, CodeMirror.xqueryHint);
        //}

        //function displayHintStatus(annotations, annotationsGroupedByLine, cm) {
        //  CodeMirror.statusLint(annotations, 'hintStatus', cm);
        //}


        var editor = CodeMirror.fromTextArea(document.getElementById('code'), {
            mode: 'das',
            lineNumbers: false,
            matchBrackets: true,
            lineWrapping: true,
            extraKeys: {
                "Ctrl-Space": "autocomplete",
                "Tab": "autocomplete",
                "'.'": passAndHint,
                "'='": passAndHint,
                "Enter": submitQuery
            }
        });
    </script>


    <!-- TODO: put real values from DAS caches -->


    <script type="text/javascript">
        // TODO: list of primary datasets is fairly long, but this is maybe ok
        CodeMirror.hint_values = ${known_values};
        CodeMirror.daskeys = ${daskeys_json};
        CodeMirror.hint_daskeys = ${daskeys_json};
        CodeMirror.hint_fields = ${fields_by_entity_json};




    </script>


    </div> <!-- end of main div -->
    <!-- end of das_ambiguous_html.tmpl -->

