#!/bin/bash

# find out where DAS is installed on a system
dasroot=`python -c "import DAS; print '/'.join(DAS.__file__.split('/')[:-1])"`
if [ -z "$dasroot" ]; then
    # if DAS is not installed, use current dir
    echo "Warning: unable to import DAS, using the working directory"
    dasroot=$PWD
fi

maps_reader="$dasroot/tools/das_maps_yml2json.py"
# check that we're able to locate das tools
if [ ! -f "$maps_reader" ]; then
    echo "Unable to locate $maps_reader"
    exit 1
fi

# define location of DAS maps
if [ -n "$1" ]; then
    das_map_dir=$1
else
    das_map_dir="$dasroot/services/cms_maps/"
fi
# check that we're able to locate das map dir
if [ -z "$das_map_dir" ]; then
    echo "Unable to locate $das_map_dir"
    exit 1
fi
echo "DAS YML: $das_map_dir"

# build DAS JSON maps out of DAS YML files
# the dasmaps js files are written to src/python/DAS/services/cms_maps/ into
# das_maps.js and das_testbed_maps.js

# build DAS JSON maps out of DAS YML files
build_das_maps()
{
    cmd="python $maps_reader"
    dir=$das_map_dir
    tdir=/tmp/dasmaps
    rm -rf $tdir
    mkdir -p $tdir
    cp $dir/*.yml $tdir
    if [ "$1" == "production" ]; then
        map_file="$dir/das_maps.js"
    else
        # testbed maps, replace with testbed urls
        for amap in `ls $tdir/*.yml`
        do
            sed -i -e "s/cmsweb.cern.ch/cmsweb-testbed.cern.ch/g" $amap
        done
        map_file="$dir/das_testbed_maps.js"
    fi
    rm -f $map_file
    export PYTHONPATH=$PYTHONPATH:$PWD/src/python
    for amap in `ls $tdir/*.yml`
    do
        $cmd --uri-map=$amap | grep -v "###" >> $map_file
        $cmd --notation-map=$amap | grep -v "###" >> $map_file
        $cmd --presentation-map=$amap | grep -v "###" >> $map_file
    done

    # create map files for every DBS instance namespace
    for inst in "prod" "int" "dev"
    do
        fname=${map_file%%.*}
        mfile=${fname}_dbs_$inst.js
        cp $map_file $mfile
        sed -i -e "s,dbs/prod,dbs/$inst,g" $mfile
        # add verification token (md5) to every map
        $cmd --get-verification-token-for=$mfile | grep -v "###" >> $mfile
        echo "Created: $mfile"
    done
    rm -f $map_file
    rm -rf $tdir

}

# generate production DAS maps
build_das_maps "production"

# generate pre-production DAS maps
build_das_maps "pre-production"
